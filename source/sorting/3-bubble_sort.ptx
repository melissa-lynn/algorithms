<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="sorting-3-bubble_sort" xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Bubble Sort</title>

  <p>Bubble sort works by iterating through the array, swapping pairs of items that are out of order. It repeats this iteration until the entire array is in order.</p>

  <program>
    bubble_sort

    input: array of integers of length n
    state change: array of integers sorted into ascending order

    while there was a swap in the previous iteration:
      for each position in the array:
        if the next item is less than the current item:
          swap the current item with the next item

    return
  </program> 

  <p>Here is more detailed pseudocode.</p>

  <program>
    bubble_sort

    input: array of integers of length n
    state change: array of integers sorted into ascending order

    num_swaps gets 1
    while num_swaps \gt 0:
      num_swaps gets 0
      for i from 0 to n-1:
        if array[i+1] \lt array[i]:
          swap array[i] and array[i+1]
          num_swaps += 1

    return
  </program> 

  <p>Here is another version of bubble sort.</p>

  <program>
    bubble_sort

    input: array of integers of length n
    state change: array of integers sorted into ascending order

    for r from 1 to n:
      num_swaps gets 0
      for i from 0 to n-r:
        if array[i+1] \lt array[i]:
          swap array[i] and array[i+1]
          num_swaps += 1
      if num_swaps = 0:
        break

    return
  </program>

</section>