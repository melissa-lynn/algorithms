<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="sorting-6-tree_sort" xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Tree Sort</title>

  <p>Tree sort works by inserting all items in a binary search tree, then performing an in-order traversal of the tree to extract the items in increasing order.</p>

    <program>
    tree_sort

    input: array of integers of length n
    state change: array of integers sorted into ascending order

    tree is an empty binary search tree

    for each item in the array:
      insert the item in the tree

    traversing the tree in order, copy the items back into the array

    return
  </program>

  <p>Here is more detailed pseudocode for tree sort.</p>

  <program>
    tree_sort

    input: array of integers of length n
    state change: array of integers sorted into ascending order

    tree is an empty binary search tree

    for each item in the array:
      insert the item in the tree

    call tree_sort_helper on the root of the tree, array, 0

    return

    tree_sort_helper(tree_node, array, index)

    input: node in a tree, array, index
    state_change: all descendents of the node are copied into array in ascending order starting at index, index is updated to the end of the copied portion

    if tree_node is empty:
      return
    
    call tree_sort_helper on the left child of tree_node, array, index
    array[index] gets the data at tree_node
    index gets index + 1
    call tree_sort_helper on the right child of tree_node, array, index

    return
  </program>



</section>